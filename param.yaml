# Input file to define the parameters for the script.
object_name : 'Test_1p95msun'  # Name of the object, must be a python string, outputfiles will begin witht this name

save_path : '/home/sstock/Seafile/GJ251/stellar_param/' # Path were the results will be saved

model_path : '/media/sstock/Seagate Expansion Drive/Project_SPOG/Models_uncompressed_BV_new.h5'  # Path to the hdf5 file

mag_star : 7.18264 # magnitude of star in certain band [mag]

mag_star_err : 0.010 #uncertainty of magnitude in the band

color_star : 0.8788 #color of the star [mag]

color_star_err : 0.013 #uncertainty of magnitude in the band

met_star : 0.05979 #metallicity [Fe/H] [dex]

met_star_err : 0.01 #uncertainty of metallicity

par_star : 8.2719 #parallax [mas]

par_err_star : 0.02 #uncertainty of parallax [mas]

par_err_dom : False #If the parallax error is assumed to dominate the uncertainty set to TRUE, if False slight BIAS is introduced since magnitude uncertainty is non-linear with respect to ABL

use_extinction : False  # Use extinction estimate

A_lambda : 0.21                # extinction A_band

E_color : 0.06                     # reddening in color bands

parameterization: 'default2'      # default, default2, log, linear

model_sampling: 10           # Default is 1, higher integer value to use sparser sampling on the models by using every nth model in terms of metallicity, improving model load times but possibly affecting parameter precision and accuracy. Not recommended for final calculations

plot_corner: True #if True saves a corner plot

return_ascii: True # if True saves an ascii file (readable by Topcat)

plot_posterior: True #if True saves a posterior plot (without cornerplot)

posterior_bins: -1 #send the bin argument to astropy.stats.histogram (can be float or sting), if set to -1 the optimal number of bins will be calculated by using a self-implemented algorithm provided in Hogg (2008) (arkiv:0807.4820v1)

posterior_fig_kwargs: {} #kwargs to sent to matplotlib.pyplot.subplot to influence the figure style, set empty {} for default

posterior_plot_kwargs: {} #kwargs to sent to matplotlib.pyplot.plot() to influence the plotting style, set empty {} for default

save_posterior: True    #if True saves all posterior results into a single hdf5 file, use pandas.read_hdf('filename.h5', 'key') where key is RGB or HB to reload the posterior into a Pandas dataframe
